version: '3.8'

services:
  # Frontend service - Vue.js PWA (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production-stage
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

  # Backend service - Python (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/outdoortracker
    depends_on:
      - db
    networks:
      - app-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s

  # Database service (Production)
  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=outdoortracker
    ports:
      - "5432:5432"
    networks:
      - app-network
    deploy:
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure

volumes:
  postgres_data:
    driver: local

networks:
  app-network:
    driver: overlay
